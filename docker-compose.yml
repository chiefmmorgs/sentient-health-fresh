services:
  # Existing health service
  health:
    build:
      context: .
      dockerfile: Dockerfile.health
    ports:
      - "8000:8000"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - HEALTH_API_KEY=${HEALTH_API_KEY}
      - DEFAULT_MODEL=${DEFAULT_MODEL:-meta-llama/llama-3.2-3b-instruct:free}
      - ROMA_BASE_URL=http://roma:5000
      - SEARCH_SERVICE_URL=http://search:5001  # NEW
      - DATABASE_URL=sqlite:///./health_reports.db
    volumes:
      - ./health_reports.db:/app/health_reports.db
    depends_on:
      - roma
      - search  # NEW
    networks:
      - health-network

  # Existing ROMA service
  roma:
    build:
      context: .
      dockerfile: Dockerfile.roma
    ports:
      - "5000:5000"
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DEFAULT_MODEL=${DEFAULT_MODEL:-meta-llama/llama-3.2-3b-instruct:free}
      - SEARCH_SERVICE_URL=http://search:5001  # NEW
    depends_on:
      - search  # NEW
    networks:
      - health-network

  # NEW - Search service
  search:
    build:
      context: .
      dockerfile: Dockerfile.search
    ports:
      - "5001:5001"
    environment:
      - SERPER_API_KEY=${SERPER_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    networks:
      - health-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  health-network:
    driver: bridge
